<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="Voters" xml:space="preserve">
    <value>Voters</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Candidates" xml:space="preserve">
    <value>Candidates</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Change Password" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy</value>
  </data>
  <data name="Log out" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="Ballot" xml:space="preserve">
    <value>Ballot</value>
  </data>
  <data name="Update Information" xml:space="preserve">
    <value>Update Information</value>
  </data>
  <data name="Voters List" xml:space="preserve">
    <value>Voters List</value>
  </data>
  <data name="Add Voter" xml:space="preserve">
    <value>Add Voter</value>
  </data>
  <data name="Full Name" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Contact Number" xml:space="preserve">
    <value>Contact Number</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete Voter" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Voter Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Voter has not been found" xml:space="preserve">
    <value>Voter has not been found.</value>
  </data>
  <data name="Vote Status" xml:space="preserve">
    <value>Vote Status</value>
  </data>
  <data name="Audit" xml:space="preserve">
    <value>Audit</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Start Date" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="End Date" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="Event Type" xml:space="preserve">
    <value>Event Type</value>
  </data>
  <data name="STV" xml:space="preserve">
    <value>Single Transferable Vote</value>
  </data>
  <data name="Select Rank" xml:space="preserve">
    <value>Select Rank</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Party" xml:space="preserve">
    <value>Party</value>
  </data>
  <data name="No Event" xml:space="preserve">
    <value>No event is currently active.</value>
  </data>
  <data name="Selected Candidate" xml:space="preserve">
    <value>Selected Candidate</value>
  </data>
  <data name="No Ballot" xml:space="preserve">
    <value>There is no ballot available for you.</value>
  </data>
  <data name="No Candidate Selected" xml:space="preserve">
    <value>No candidate selected.</value>
  </data>
  <data name="No Candidates" xml:space="preserve">
    <value>There are no candidates available for this event.</value>
  </data>
  <data name="PV" xml:space="preserve">
    <value>Preferential Voting</value>
  </data>
  <data name="Register Voter" xml:space="preserve">
    <value>Register Voter</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State/County</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Edit Voter" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Voted" xml:space="preserve">
    <value>Voted</value>
  </data>
  <data name="Not Voted" xml:space="preserve">
    <value>Not Voted</value>
  </data>
  <data name="Vote Now" xml:space="preserve">
    <value>Vote Now</value>
  </data>
  <data name="List for Audit" xml:space="preserve">
    <value>List for Audit</value>
  </data>
  <data name="VoteId" xml:space="preserve">
    <value>Vote ID</value>
  </data>
  <data name="VoterId" xml:space="preserve">
    <value>Voter ID</value>
  </data>
  <data name="CandidateId" xml:space="preserve">
    <value>Candidate ID</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="EventId" xml:space="preserve">
    <value>Event ID</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Vote At" xml:space="preserve">
    <value>Vote At Time</value>
  </data>
  <data name="Event Name" xml:space="preserve">
    <value>Event Name</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Profile Picture" xml:space="preserve">
    <value>Profile Picture</value>
  </data>
  <data name="Electoral Administrator" xml:space="preserve">
    <value>Electoral Administrator</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Third Part" xml:space="preserve">
    <value>Third Part Auditor</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add +</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Registered Date" xml:space="preserve">
    <value>Registered Date</value>
  </data>
  <data name="No User" xml:space="preserve">
    <value>User has not been found.</value>
  </data>
  <data name="FPTP" xml:space="preserve">
    <value>First-Past-The-Post</value>
  </data>
  <data name="Enter Login and Password" xml:space="preserve">
    <value>Please enter your login and password!</value>
  </data>
  <data name="Forgot Password" xml:space="preserve">
    <value>Forgot Password?</value>
  </data>
  <data name="No Account" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
  <data name="Change your Password" xml:space="preserve">
    <value>Change your Password</value>
  </data>
  <data name="Old Password" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="New Password" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirm new Password</value>
  </data>
  <data name="Reset Password" xml:space="preserve">
    <value>Reset your Password</value>
  </data>
  <data name="Restrict Page" xml:space="preserve">
    <value>Restrict Page</value>
  </data>
  <data name="Restrict Page Description" xml:space="preserve">
    <value>You do not have permission to access this page, please contact Administrator</value>
  </data>
  <data name="Return Home" xml:space="preserve">
    <value>Please click here to return Home page</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Portuguese" xml:space="preserve">
    <value>Portuguese</value>
  </data>
  <data name="Evoting System" xml:space="preserve">
    <value>Evoting System SBMM</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Vote Count</value>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="Winner" xml:space="preserve">
    <value>Winner</value>
  </data>
  <data name="Elected" xml:space="preserve">
    <value>Elected</value>
  </data>
  <data name="Not Elected" xml:space="preserve">
    <value>Not Elected</value>
  </data>
  <data name="No Votes" xml:space="preserve">
    <value>No votes cast yet.</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello,</value>
  </data>
  <data name="Voter" xml:space="preserve">
    <value>Voter</value>
  </data>
  <data name="Passport" xml:space="preserve">
    <value>Passport</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve voter</value>
  </data>
  <data name="Deny" xml:space="preserve">
    <value>Refuse voter</value>
  </data>
  <data name="Pending voter requesting" xml:space="preserve">
    <value>There are pending voters requesting approval.</value>
  </data>
  <data name="No pending voter requesting" xml:space="preserve">
    <value>There are no pending voters to approve.</value>
  </data>
</root>